This assignment should be programmed entirely in C and must compile and run on the lab’s
linux environment or similar. Copying & pasting code from anywhere is considered cheating
and results in an automatic F.
WARNING: This assignment involves the creating and overwriting of files. It is very
important that you are careful with your testing! It is very easy to lose your program! Your
goal for this assignment is to create a file backup system called BackItUp!
1. BackItUp should create a directory .backup/ if one does not already exist (Unix Tip:
files and directories that start with a ‘.’ are hidden and in order to see them in the terminal
you must use the ls -a command). (4 pts)
2. BackItUp should then create a copy of all the regular files in the current working
directory in the .backup/ directory. All the backup files should have .bak appended to their
name. (4 pts)
3. If a backup file already exists, your program should compare the last modification
times of the original file and the backup file and determine if a backup is required. If the
existing .bak backup file is older, then your program should overwrite it. Print out a warning
when doing so. Otherwise, you should not overwrite the file, and you should notify the user
that the file is already the most current version. (4 pts)
4. Your program should allocate a new thread to copy each file. Therefore, if the current
working directory contains five files, then your program should create five threads to backup
each file. Of course, your program should not terminate until all the threads have finished.
(5 pts)
5. You must recursively handle subdirectories. In each subdirectory, you must again
spawn one thread per file. (3 pts)
6. If the user invokes BackItUp with the optional −r (restore) argument, then it should
restore all backup files in the .backup directory by copying them to the current working
directory (this is the part you have make sure you don’t overwrite your existing version of
BackItUp). Again, it should not restore any files that have a later modification time than
the backed up copy. Like before, the restore function should create a separate thread for
each file being copied. (5 pts)
7. Notes: You will want to check out the following Unix system calls for C: stat(),
opendir(), and readdir().
In the figure below, you can see the output of BackItUp in the following sample interaction.

Modified 4/14 at 2:42 PM
